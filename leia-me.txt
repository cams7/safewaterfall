-------------------------------------------- 15/03/20 --------------------------------------------
cd "C:\Dev\My\Sisbarc\sisbarc\maven-projects\java"
mvn -Dmaven.compiler.fork=true -Dmaven.compiler.executable="C:\Program Files\Java\jdk1.8.0_241\bin\javac" -s settings.xml clean package

#mvn -Dmaven.compiler.fork=true -Dmaven.compiler.executable="C:\Program Files\Java\jdk1.8.0_241\bin\javac" -s settings.xml wildfly:deploy -Dwildfly.hostname=192.168.100.12
#mvn -Dmaven.compiler.fork=true -Dmaven.compiler.executable="C:\Program Files\Java\jdk1.8.0_241\bin\javac" -s settings.xml wildfly:undeploy -Dwildfly.hostname=192.168.100.12

#Copie o arquivo rxtxSerial.dll para "C:\Program Files\Java\jre1.8.0_241\bin"
#Copie o arquivo RXTXcomm.jar para "C:\Program Files\Java\jre1.8.0_241\lib\ext"

java -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1234 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=192.168.100.12 -jar jmx/acende_apaga_leds_monitor/target/acende_apaga_leds_monitor.jar

cd "C:\Dev\Java\wildfly-10.1.0.Final\bin"
#./add-user.bat	
#	b) Application User
#	Username: AcendeApagaLEDs
#    Password: abc@12345
#    Roles:
	
./standalone.bat -b 0.0.0.0 -bmanagement 0.0.0.0

#http://192.168.100.12:8080/acende_apaga_leds/led_list.jsf?active=lista_leds

export ANDROID_HOME=C:/Users/CAMs7/AppData/Local/Android/Sdk
echo $ANDROID_HOME


http://localhost:8080/h2
http://localhost:8080/swagger-ui.html
http://localhost:8080/h2

-------------------------------------------- 17/03/20 --------------------------------------------

docker pull redis:alpine3.11
docker rm redis_swsensor -f || true && docker run -d --name redis_swsensor -p 6379:6379 -i -t redis:alpine3.11
docker rm redis_swmanager -f || true && docker run -d --name redis_swmanager -p 6479:6379 -i -t redis:alpine3.11
docker rm redis_swsiren -f || true && docker run -d --name redis_swsiren -p 6579:6379 -i -t redis:alpine3.11

#Altera o ESTADO do LED para ACESO ou APAGADO
curl -X POST "http://localhost:8080/arduino/alterar_estado_led/ACESO" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"
curl -X POST "http://localhost:8080/arduino/alterar_estado_led/APAGADO" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"

#Altera o EVENTO e o INTERVALO do LED
curl -X POST "http://localhost:8080/arduino/alterar_evento_led/PISCA_PISCA/INTERVALO_1SEGUNDO" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"

#Carrega o ESTADO do LED na memoria, que pode ser ACESO ou APAGADO
curl -X POST "http://localhost:8080/arduino/carregar_estado_led" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"
#Busca o ESTADO do LED, que pode ser ACESO ou APAGADO
curl -X POST "http://localhost:8080/arduino/buscar_estado_led/MESSAGE" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"

#Carrega o ESTADO do LED na memoria, que pode ser ACESO ou APAGADO
curl -X POST "http://localhost:8080/arduino/carregar_estado_led" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"
#Buscar o EVENTO, os dados sao recebidos pela SERIAL do ARDUINO
curl -X POST "http://localhost:8080/arduino/buscar_estado_led/MESSAGE" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"


#Carregar os Dados na EEPROM do ARDUINO
curl -X POST "http://localhost:8080/arduino/carregar_dados" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"

#Buscar os Dados na EEPROM do ARDUINO
curl -X POST "http://localhost:8080/arduino/buscar_dados" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{ \"pin\": 11, \"pinType\": \"DIGITAL\"}"

-------------------------------------------- 18/03/20 --------------------------------------------
curl -X GET "http://localhost:8080/arduino/carregar_distancia" -H "accept: application/json;charset=UTF-8"
curl -X GET "http://localhost:8080/arduino/buscar_distancia" -H "accept: application/json;charset=UTF-8"

-------------------------------------------- 21/03/20 --------------------------------------------
mvn clean install -f "C:/Dev/My/Safewaterfall/common/swarduino"
mvn clean install -f "C:/Dev/My/Safewaterfall/common/swcommon"
cd "C:/Dev/My/Safewaterfall/swsensor/swsensor-api"
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev.flyway.properties
mvn clean package -f "C:/Dev/My/Safewaterfall/swsensor/swsensor-api" && java -jar "C:/Dev/My/Safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar"
mvn clean package -f "C:/Dev/My/Safewaterfall/swmanager-api" && java -jar "C:/Dev/My/Safewaterfall/swmanager-api/target/swmanager-0.0.1-SNAPSHOT.jar"

-------------------------------------------- 22/03/20 --------------------------------------------

git clone https://gitlab.com/johnjvester/jpa-spec-with-quartz.git

-------------------------------------------- 26/04/20 --------------------------------------------
mvn clean install -f "C:/Dev/My/Safewaterfall/common/swarduino"
mvn clean install -f "C:/Dev/My/Safewaterfall/common/swcommon"

cd "C:/Dev/My/Safewaterfall/swmanager-api"
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev.flyway.properties
cd "C:/Dev/My/Safewaterfall/swsensor/swsensor-api"
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev.flyway.properties

mvn -Pdev -DskipTests clean package -f "C:/Dev/My/Safewaterfall/swsiren/swsiren-api" && java -jar "C:/Dev/My/Safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar"
mvn -Pdev -DskipTests clean package -f "C:/Dev/My/Safewaterfall/swmanager-api" && java -jar "C:/Dev/My/Safewaterfall/swmanager-api/target/swmanager-0.0.1-SNAPSHOT.jar"
mvn -Pdev -DskipTests clean package -f "C:/Dev/My/Safewaterfall/swsensor/swsensor-api" && java -jar "C:/Dev/My/Safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar"

curl -X GET "http://localhost:8080/arduino/carregar_distancia" -H "accept: application/json;charset=UTF-8"
curl -X GET "http://localhost:8080/arduino/buscar_distancia" -H "accept: application/json;charset=UTF-8"


-------------------------------------------- 09/05/20 --------------------------------------------

docker rm redis_swmanager -f || true && docker run -d --name redis_swmanager -p 6479:6379 -i -t redis:alpine3.11
docker rm redis_swsensor1 -f || true && docker run -d --name redis_swsensor1 -p 6381:6379 -i -t redis:alpine3.11
docker rm redis_swsensor2 -f || true && docker run -d --name redis_swsensor2 -p 6382:6379 -i -t redis:alpine3.11
docker rm redis_swsensor3 -f || true && docker run -d --name redis_swsensor3 -p 6383:6379 -i -t redis:alpine3.11
docker rm redis_swsiren1 -f || true && docker run -d --name redis_swsiren1 -p 6581:6379 -i -t redis:alpine3.11
docker rm redis_swsiren2 -f || true && docker run -d --name redis_swsiren2 -p 6582:6379 -i -t redis:alpine3.11

uuidgen

mvn clean install -f "C:/Dev/My/Safewaterfall/common/swarduino"
mvn clean install -f "C:/Dev/My/Safewaterfall/common/swcommon"

cd "C:/Dev/My/Safewaterfall/swmanager-api"
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev.flyway.properties
cd "C:/Dev/My/Safewaterfall/swsensor/swsensor-api"
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev1.flyway.properties
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev2.flyway.properties
mvn -Pdev -DskipTests flyway:migrate -Dflyway.configFile=dev3.flyway.properties

mvn -Pdev "-Dserver.port=8180" "-Dspring.datasource.url=jdbc:h2:file:C:/Dev/My/Safewaterfall/db/h2/swmanager" "-DREDIS_ADDRESS=172.42.42.210:6479" clean package -f "C:/Dev/My/Safewaterfall/swmanager-api" && cp "C:/Dev/My/Safewaterfall/swmanager-api/target/swmanager-0.0.1-SNAPSHOT.jar" "C:/Dev/My/Safewaterfall/tests/swmanager.jar" && java -jar "C:/Dev/My/Safewaterfall/tests/swmanager.jar"

mvn -Pdev "-Dserver.port=8081" "-Dspring.datasource.url=jdbc:h2:file:C:/Dev/My/Safewaterfall/db/h2/swsensor1" "-DSERIAL_PORT=COM6" "-DREDIS_ADDRESS=172.42.42.210:6381" "-DSENSOR_ID=9e4399af-cd4e-445c-a7e0-40eb7caeea45" clean package -f "C:/Dev/My/Safewaterfall/swsensor/swsensor-api" && cp "C:/Dev/My/Safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/Dev/My/Safewaterfall/tests/swsensor1.jar" && java -jar "C:/Dev/My/Safewaterfall/tests/swsensor1.jar"
mvn -Pdev "-Dserver.port=8082" "-Dspring.datasource.url=jdbc:h2:file:C:/Dev/My/Safewaterfall/db/h2/swsensor2" "-DSERIAL_PORT=COM8" "-DREDIS_ADDRESS=172.42.42.210:6382" "-DSENSOR_ID=85dda960-fed4-4519-82f8-386316a44937" clean package -f "C:/Dev/My/Safewaterfall/swsensor/swsensor-api" && cp "C:/Dev/My/Safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/Dev/My/Safewaterfall/tests/swsensor2.jar" && java -jar "C:/Dev/My/Safewaterfall/tests/swsensor2.jar"
mvn -Pdev "-Dserver.port=8083" "-Dspring.datasource.url=jdbc:h2:file:C:/Dev/My/Safewaterfall/db/h2/swsensor3" "-DSERIAL_PORT=COM10" "-DREDIS_ADDRESS=172.42.42.210:6383" "-DSENSOR_ID=52480005-7804-4c02-a930-a0b20a3fdc6e" clean package -f "C:/Dev/My/Safewaterfall/swsensor/swsensor-api" && cp "C:/Dev/My/Safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/Dev/My/Safewaterfall/tests/swsensor3.jar" && java -jar "C:/Dev/My/Safewaterfall/tests/swsensor3.jar"

mvn -Pdev "-Dserver.port=8281" "-Dspring.datasource.url=jdbc:h2:file:C:/Dev/My/Safewaterfall/db/h2/swsiren1" "-DSERIAL_PORT=COM12" "-DREDIS_ADDRESS=172.42.42.210:6581" "-DSENSOR_ID=b10882c0-b2e6-4aca-a2c6-6012023d1e61" clean package -f "C:/Dev/My/Safewaterfall/swsiren/swsiren-api" && cp "C:/Dev/My/Safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar" "C:/Dev/My/Safewaterfall/tests/swsiren1.jar" && java -jar "C:/Dev/My/Safewaterfall/tests/swsiren1.jar"
mvn -Pdev "-Dserver.port=8282" "-Dspring.datasource.url=jdbc:h2:file:C:/Dev/My/Safewaterfall/db/h2/swsiren2" "-DSERIAL_PORT=COM14" "-DREDIS_ADDRESS=172.42.42.210:6582" "-DSENSOR_ID=1d10c7ef-f759-4073-a9bc-8656949c6826" clean package -f "C:/Dev/My/Safewaterfall/swsiren/swsiren-api" && cp "C:/Dev/My/Safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar" "C:/Dev/My/Safewaterfall/tests/swsiren2.jar" && java -jar "C:/Dev/My/Safewaterfall/tests/swsiren2.jar"

-------------------------------------------- 16/05/20 --------------------------------------------

cd "C:\Dev\My\Safewaterfall\box"
vagrant up && vagrant ssh
sudo apt update -y
sudo apt upgrade -y

sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update -y
sudo apt install docker-ce docker-ce-cli containerd.io -y

sudo usermod -aG docker vagrant
sudo newgrp docker

#docker ps

sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

#docker-compose version

docker pull redis:alpine3.11

#sudo add-apt-repository ppa:linuxuprising/java -y
#sudo apt update -y
#sudo apt install oracle-java14-installer -y

sudo apt update
sudo apt install openjdk-8-jdk openjdk-8-jre

#java --version
#javac --version

curl "http://ftp.unicamp.br/pub/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz" -o /home/vagrant/apache-maven-3.6.3-bin.tar.gz && tar -vzxf /home/vagrant/apache-maven-3.6.3-bin.tar.gz && sudo mv /home/vagrant/apache-maven-3.6.3 /opt

echo 'export MVN_HOME=/opt/apache-maven-3.6.3' >> ~/.bashrc
echo 'export PATH=$PATH:$MVN_HOME/bin' >> ~/.bashrc
echo 'export SWMANAGER_JDBC_DATABASE_URL=jdbc:h2:file:/opt/safewaterfall/h2/swmanager' >> ~/.bashrc
echo 'export SWMANAGER_JDBC_DATABASE_USERNAME=sa' >> ~/.bashrc
echo 'export SWMANAGER_JDBC_DATABASE_PASSWORD=' >> ~/.bashrc
echo 'export SWMANAGER_JDBC_DATABASE_DRIVER=org.h2.Driver' >> ~/.bashrc
echo 'export SWMANAGER_SERVER_PORT=8180' >> ~/.bashrc
echo 'export SWMANAGER_HTTP_TIMEOUT=5000' >> ~/.bashrc
echo 'export SWMANAGER_REDIS_ADDRESS=172.42.42.220:6479' >> ~/.bashrc
echo 'export SWSENSOR_JDBC_DATABASE_URL=jdbc:h2:file:/opt/safewaterfall/h2/swsensor' >> ~/.bashrc
echo 'export SWSENSOR_JDBC_DATABASE_USERNAME=sa' >> ~/.bashrc
echo 'export SWSENSOR_JDBC_DATABASE_PASSWORD=' >> ~/.bashrc
echo 'export SWSENSOR_JDBC_DATABASE_DRIVER=org.h2.Driver' >> ~/.bashrc
echo 'export SWSENSOR_SERVER_PORT=8080' >> ~/.bashrc
echo 'export SWSENSOR_SERIAL_PORT=/dev/ttyS1' >> ~/.bashrc
echo 'export SWSENSOR_SERIAL_BAUD_RATE=9600' >> ~/.bashrc
echo 'export SWSENSOR_SERIAL_THREAD_TIME=500' >> ~/.bashrc
echo 'export SWSENSOR_HTTP_TIMEOUT=5000' >> ~/.bashrc
echo 'export SWSENSOR_REDIS_ADDRESS=172.42.42.220:6379' >> ~/.bashrc
echo 'export SWSENSOR_SENSOR_ID=9659c296-bc10-434f-9e57-a4c3784e79e8' >> ~/.bashrc
echo 'export SWSIREN_JDBC_DATABASE_URL=jdbc:h2:file:/opt/safewaterfall/h2/swsiren' >> ~/.bashrc
echo 'export SWSIREN_JDBC_DATABASE_USERNAME=sa' >> ~/.bashrc
echo 'export SWSIREN_JDBC_DATABASE_PASSWORD=' >> ~/.bashrc
echo 'export SWSIREN_JDBC_DATABASE_DRIVER=org.h2.Driver' >> ~/.bashrc
echo 'export SWSIREN_SERVER_PORT=8280' >> ~/.bashrc
echo 'export SWSIREN_SERIAL_PORT=/dev/ttyS2' >> ~/.bashrc
echo 'export SWSIREN_SERIAL_BAUD_RATE=9600' >> ~/.bashrc
echo 'export SWSIREN_SERIAL_THREAD_TIME=500' >> ~/.bashrc
echo 'export SWSIREN_HTTP_TIMEOUT=5000' >> ~/.bashrc
echo 'export SWSIREN_REDIS_ADDRESS=172.42.42.220:6579' >> ~/.bashrc
echo 'export SWSIREN_SIREN_ID=0134c0a8-d6ad-4107-94b4-fee84f7ced17' >> ~/.bashrc
echo 'export MANAGER_URL=http://172.42.42.220:8180' >> ~/.bashrc

exit
cd "C:\Dev\My\Safewaterfall\box"
vagrant reload && vagrant ssh
#vagrant ssh-config
#C:/Dev/My/Safewaterfall/box/.vagrant/machines/safewaterfall/virtualbox/private_key

#mvn --version

#http://jlog.org/rxtx-lin.html
sudo curl "http://jlog.org/v4/linux/x86_64-unknown-linux-gnu/RXTXcomm.jar" -o /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/RXTXcomm.jar
sudo curl "http://jlog.org/v4/linux/x86_64-unknown-linux-gnu/librxtxSerial.so" -o /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/librxtxSerial.so

#https://cleitonbueno.com/virtualbox-compartilhar-porta-serial-do-windows-para-o-linux/
dmesg | grep tty
sudo setserial /dev/ttyS1
sudo setserial /dev/ttyS2

#uuidgen

sudo mkdir /opt/safewaterfall/h2 && sudo chown vagrant:vagrant /opt/safewaterfall/h2
sudo mkdir /opt/safewaterfall/tests && sudo chown vagrant:vagrant /opt/safewaterfall/tests

mvn clean install -f /opt/safewaterfall/common/swarduino
mvn clean install -f /opt/safewaterfall/common/swcommon

cd /opt/safewaterfall/swsensor-api
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test.flyway.properties
cd /opt/safewaterfall/swmanager-api
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test.flyway.properties

docker rm redis_swsensor -f || true && docker run -d --name redis_swsensor -p 6379:6379 -i -t redis:alpine3.11
docker rm redis_swmanager -f || true && docker run -d --name redis_swmanager -p 6479:6379 -i -t redis:alpine3.11
docker rm redis_swsiren -f || true && docker run -d --name redis_swsiren -p 6579:6379 -i -t redis:alpine3.11

mvn -Ptest -DskipTests clean package -f /opt/safewaterfall/swsiren-api && cp -f /opt/safewaterfall/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar /opt/safewaterfall/tests/swsiren1.jar && sudo java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8200 -jar /opt/safewaterfall/tests/swsiren1.jar
mvn -Ptest -DskipTests clean package -f /opt/safewaterfall/swmanager-api && cp -f /opt/safewaterfall/swmanager-api/target/swmanager-0.0.1-SNAPSHOT.jar /opt/safewaterfall/tests/swmanager.jar && java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8100 -jar /opt/safewaterfall/tests/swmanager.jar
mvn -Ptest -DskipTests clean package -f /opt/safewaterfall/swsensor-api && cp -f /opt/safewaterfall/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar /opt/safewaterfall/tests/swsensor1.jar && sudo java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 -jar /opt/safewaterfall/tests/swsensor1.jar

#http://172.42.42.220:8180/h2
#http://172.42.42.220:8180/swagger-ui.html
#http://172.42.42.220:8080/h2
#http://172.42.42.220:8080/swagger-ui.html
#http://172.42.42.220:8280/h2
#http://172.42.42.220:8280/swagger-ui.html

-------------------------------------------- 06/06/20 --------------------------------------------

#Copie o arquivo rxtxSerial.dll para "C:\Program Files\Java\jre1.8.0_241\bin"
#Copie o arquivo RXTXcomm.jar para "C:\Program Files\Java\jre1.8.0_241\lib\ext"

cd "C:\My\Desenv\My\safewaterfall\box"
vagrant up && vagrant ssh
sudo apt update -y
sudo apt upgrade -y

sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update -y
sudo apt install docker-ce docker-ce-cli containerd.io -y

sudo usermod -aG docker vagrant
sudo newgrp docker

#docker ps

sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

#docker-compose version

docker pull redis:alpine3.11

docker rm redis_swmanager -f || true && docker run -d --name redis_swmanager -p 6379:6379 -i -t redis:alpine3.11
docker rm redis_swsensor11 -f || true && docker run -d --name redis_swsensor11 -p 6479:6379 -i -t redis:alpine3.11
docker rm redis_swsiren11 -f || true && docker run -d --name redis_swsiren11 -p 6480:6379 -i -t redis:alpine3.11
docker rm redis_swsensor21 -f || true && docker run -d --name redis_swsensor21 -p 6579:6379 -i -t redis:alpine3.11
docker rm redis_swsiren21 -f || true && docker run -d --name redis_swsiren21 -p 6580:6379 -i -t redis:alpine3.11
docker rm redis_swsensor22 -f || true && docker run -d --name redis_swsensor22 -p 6581:6379 -i -t redis:alpine3.11

docker pull postgres:13-alpine
docker pull dpage/pgadmin4:4.22
docker network create --driver bridge network200606
docker run --name postgres200606 --network=network200606 -e "POSTGRES_PASSWORD=abc123" -p 5432:5432 -v /home/vagrant/postgresql_data:/var/lib/postgresql/data -d postgres:13-alpine
docker run --name pgadmin200606 --network=network200606 -p 180:80 -e "PGADMIN_DEFAULT_EMAIL=ceanma83@gmail.com" -e "PGADMIN_DEFAULT_PASSWORD=abc123" -d dpage/pgadmin4:4.22

#http://172.42.42.220:180
#http://192.168.100.8:180

docker pull alpine:3.11.2

docker run -it --rm alpine:3.11.2 /bin/sh
apk --update add postgresql-client && rm -rf /var/cache/apk/*
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP USER IF EXISTS safewaterfall"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE USER safewaterfall WITH ENCRYPTED PASSWORD 'abc123'"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swmanager"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swmanager"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swmanager TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swmanager" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsensor11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsensor11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsensor11 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsensor11" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsiren11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsiren11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsiren11 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsiren11" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsensor21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsensor21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsensor21 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsensor21" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsiren21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsiren21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsiren21 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsiren21" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsensor22"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsensor22"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsensor22 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsensor22" -c "SELECT CURRENT_DATABASE()"
exit

mvn clean install -f "C:/My/Desenv/My/safewaterfall/common/swarduino"
mvn clean install -f "C:/My/Desenv/My/safewaterfall/common/swcommon"

cd "C:/My/Desenv/My/safewaterfall/swmanager-api"
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test.flyway.properties
cd "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api"
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test.flyway.properties

mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api" && java -jar "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar"
mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swmanager-api" && java -jar "C:/My/Desenv/My/safewaterfall/swmanager-api/target/swmanager-0.0.1-SNAPSHOT.jar"
mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api" && java -jar "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar"

---------------------------------------------------------------------------------------------------

cd "C:/My/Desenv/My/safewaterfall/swmanager-api"
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test.flyway.properties
cd "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api"
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test-swsensor11.flyway.properties
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test-swsensor21.flyway.properties

mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api" && cp "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsiren11.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsiren11.jar"
mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api" && cp "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsensor11.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsensor11.jar"

mvn -Ptest "-Dspring.datasource.url=jdbc:postgresql://192.168.100.8:5432/swsiren21" "-DSERIAL_PORT=COM5" "-DREDIS_ADDRESS=192.168.100.8:6580" "-DSIREN_ID=1254a9ba-3fe0-4399-abfc-dfc00cad516d" "-DQUARTZ_DS_URL=jdbc:postgresql://192.168.100.8:5432/swsiren21;INIT=RUNSCRIPT FROM 'classpath:/org/quartz/impl/jdbcjobstore/tables_postgres.sql'" clean package -f "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api" && cp "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsiren21.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsiren21.jar"
mvn -Ptest "-Dspring.datasource.url=jdbc:postgresql://192.168.100.8:5432/swsensor21" "-DSERIAL_PORT=COM7" "-DREDIS_ADDRESS=192.168.100.8:6579" "-DSENSOR_ID=dd21c439-e3f9-44b9-902e-2eac40f53705" "-DQUARTZ_DS_URL=jdbc:postgresql://192.168.100.8:5432/swsensor21;INIT=RUNSCRIPT FROM 'classpath:/org/quartz/impl/jdbcjobstore/tables_postgres.sql'" clean package -f "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api" && cp "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsensor21.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsensor21.jar"


-------------------------------------------- 07/06/20 --------------------------------------------

(swmanager) - Notebook Capgemini
IP 192.168.100.23
Redis 192.168.100.8:6379
DS jdbc:postgresql://192.168.100.8:5432/swmanager
URL http://192.168.100.23:8080

(swsensor11, swsiren11) - PC
IP 192.168.100.8
swsensor11
	Redis 192.168.100.8:6479
	DS jdbc:postgresql://192.168.100.8:5432/swsensor11
	URL http://192.168.100.8:8180
	ID 9659c296-bc10-434f-9e57-a4c3784e79e8
swsiren11 
	Redis 192.168.100.8:6480
	DS jdbc:postgresql://192.168.100.8:5432/swsiren11
	URL http://192.168.100.8:8280
	ID 0134c0a8-d6ad-4107-94b4-fee84f7ced17

(swsensor21, swsiren21, swsensor22) Notebook VAIO
IP 192.168.100.12
swsensor21
	Redis 192.168.100.8:6579
	DS jdbc:postgresql://192.168.100.8:5432/swsensor21
	URL http://192.168.100.12:8180
	ID dd21c439-e3f9-44b9-902e-2eac40f53705
swsiren21
	Redis 192.168.100.8:6580
	DS jdbc:postgresql://192.168.100.8:5432/swsiren21
	URL http://192.168.100.12:8280
	ID 1254a9ba-3fe0-4399-abfc-dfc00cad516d
swsensor22
	Redis 192.168.100.8:6581
	DS jdbc:postgresql://192.168.100.8:5432/swsensor22
	http://192.168.100.12:8380
	ID 4764bc1a-c119-4b56-bc74-f1a538218cf9

cd "C:\My\Desenv\My\safewaterfall\box"
vagrant up && vagrant ssh

uuidgen

docker start postgres200606 && docker start pgadmin200606

docker rm redis_swmanager -f || true && docker run -d --name redis_swmanager -p 6379:6379 -i -t redis:alpine3.11
docker rm redis_swsensor11 -f || true && docker run -d --name redis_swsensor11 -p 6479:6379 -i -t redis:alpine3.11
docker rm redis_swsiren11 -f || true && docker run -d --name redis_swsiren11 -p 6480:6379 -i -t redis:alpine3.11
docker rm redis_swsensor21 -f || true && docker run -d --name redis_swsensor21 -p 6579:6379 -i -t redis:alpine3.11
docker rm redis_swsiren21 -f || true && docker run -d --name redis_swsiren21 -p 6580:6379 -i -t redis:alpine3.11
docker rm redis_swsensor22 -f || true && docker run -d --name redis_swsensor22 -p 6581:6379 -i -t redis:alpine3.11

docker run -it --rm alpine:3.11.2 /bin/sh
apk --update add postgresql-client && rm -rf /var/cache/apk/*
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP USER IF EXISTS safewaterfall"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE USER safewaterfall WITH ENCRYPTED PASSWORD 'abc123'"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swmanager"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swmanager"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swmanager TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swmanager" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsensor11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsensor11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsensor11 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsensor11" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsiren11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsiren11"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsiren11 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsiren11" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsensor21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsensor21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsensor21 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsensor21" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsiren21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsiren21"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsiren21 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsiren21" -c "SELECT CURRENT_DATABASE()"

psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "DROP DATABASE IF EXISTS swsensor22"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "CREATE DATABASE swsensor22"
psql "postgresql://postgres:abc123@192.168.100.8:5432/postgres" -c "GRANT ALL PRIVILEGES ON DATABASE swsensor22 TO safewaterfall"
psql "postgresql://safewaterfall:abc123@192.168.100.8:5432/swsensor22" -c "SELECT CURRENT_DATABASE()"
exit

cd "C:/My/Desenv/My/safewaterfall/swmanager-api"
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test.flyway.properties
cd "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api"
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test-swsensor11.flyway.properties
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test-swsensor21.flyway.properties
mvn -Ptest -DskipTests flyway:migrate -Dflyway.configFile=test-swsensor22.flyway.properties

mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api" && cp "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsiren11.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsiren11.jar"
mvn -Ptest clean package -f "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api" && cp "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsensor11.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsensor11.jar"

mvn -Ptest "-Dspring.datasource.url=jdbc:postgresql://192.168.100.8:5432/swsiren21" "-DSERIAL_PORT=COM5" "-DREDIS_ADDRESS=192.168.100.8:6580" "-DSIREN_ID=1254a9ba-3fe0-4399-abfc-dfc00cad516d" "-DQUARTZ_DS_URL=jdbc:postgresql://192.168.100.8:5432/swsiren21;INIT=RUNSCRIPT FROM 'classpath:/org/quartz/impl/jdbcjobstore/tables_postgres.sql'" clean package -f "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api" && cp "C:/My/Desenv/My/safewaterfall/swsiren/swsiren-api/target/swsiren-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsiren21.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsiren21.jar"
mvn -Ptest "-Dspring.datasource.url=jdbc:postgresql://192.168.100.8:5432/swsensor21" "-DSERIAL_PORT=COM7" "-DREDIS_ADDRESS=192.168.100.8:6579" "-DSENSOR_ID=dd21c439-e3f9-44b9-902e-2eac40f53705" "-DQUARTZ_DS_URL=jdbc:postgresql://192.168.100.8:5432/swsensor21;INIT=RUNSCRIPT FROM 'classpath:/org/quartz/impl/jdbcjobstore/tables_postgres.sql'" clean package -f "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api" && cp "C:/My/Desenv/My/safewaterfall/swsensor/swsensor-api/target/swsensor-0.0.1-SNAPSHOT.jar" "C:/My/Desenv/My/safewaterfall/tests/swsensor21.jar" && java -jar "C:/My/Desenv/My/safewaterfall/tests/swsensor21.jar"


